name: Mars CD for PyPI


on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [auto]
        include:
          - os: ubuntu-latest
            arch: aarch64
          - os: macos-latest
            arch: universal2

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v1

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_BEFORE_BUILD: pip install -r ci/requirements-wheel.txt
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_SKIP: pp* *-musllinux* cp36-* cp310-win32 *i686

      - name: Build source
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          python setup.py sdist --dist-dir=wheelhouse
          
      - name: Release to pypi
        shell: bash
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
        run: |
          if [[ "$GITHUB_REPOSITORY" == "mars-project/mars" ]]; then
            PYPI_REPO="https://upload.pypi.org/legacy/"
          else
            PYPI_REPO="https://test.pypi.org/legacy/"
          fi

          echo "[distutils]"             > ~/.pypirc
          echo "index-servers ="        >> ~/.pypirc
          echo "    pypi"               >> ~/.pypirc
          echo "[pypi]"                 >> ~/.pypirc
          echo "repository=$PYPI_REPO"  >> ~/.pypirc
          echo "username=pyodps"        >> ~/.pypirc
          echo "password=$PYPI_PWD"     >> ~/.pypirc

          python -m pip install twine
          python -m twine upload -r pypi --skip-existing wheelhouse/*

      - name: Upload artifacts to github
        uses: actions/upload-artifact@v1
        with:
          name: wheels
          path: ./wheelhouse
